name: pycistem CI

on:
  push:
    branches:
      - main
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10
  pull_request:
    branches:
      - main

jobs:
  compile_cistem:
    runs-on: ubuntu-20.04
    container: jojoelfe/cistem_ci_icpc
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
      name: Checkout pycistem
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        repository: 'timothygrant80/cisTEM'
        path: 'cisTEM'
      name: Checkout cisTEM
    - name: Get cisTEM sha
      id: getsha
      run: |
        cd cisTEM
        echo "::set-output name=sha::$(git rev-parse HEAD)"
    - name: Cache cisTEM
      uses: actions/cache@v3
      id: cache
      with:
        key: 'sha_${{ steps.getsha.outputs.sha }}'
        path: 'cisTEM'
    - name: Build cisTEM
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        cd cisTEM
        ./regenerate_project.b
        mkdir -p build/icpc
        cd build/icpc
        CC=icc CXX=icpc CXXFLAGS=-fPIC CFLAGS=-fPIC ../../configure  --enable-experimental --enable-staticmode --with-wx-config=wx-config  --enable-samples
        make -j4
    - name: Create artifact
      uses: actions/upload-artifact@v3
      with:
        name: 'cisTEM artifact'
        path: cisTEM
  
  build:
    needs: compile_cistem
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        python: ['3.8','3.9','3.10','3.11']

    runs-on: ubuntu-20.04
    container: ghcr.io/grigoriefflab/cistem_build_env:v1.3.8
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - uses: actions/setup-python@v2
      with:
        python-version: '${{ matrix.python }}'
      id: python
    - name: Copy cisTEM artifact
      uses: actions/download-artifact@v3
      with:
        name: cisTEM artifact
        path: cisTEM
    - name: Install Hatch
      run: ${{ steps.python.outputs.python-path }} -m pip install hatch
    - name: Build project
      run: |
        ${{ steps.python.outputs.python-path }} -m hatch build
    - name: Create artifact
      uses: actions/upload-artifact@v3
      with:
        name: 'Wheel for Python ${{ matrix.python }}'
        path: dist/pycistem*.whl
    - name: Publish
      if: contains(github.ref, 'tags')
      env:
        HATCH_INDEX_AUTH: ${{ secrets.PYPI_TOKEN }}
        HATCH_INDEX_USER: jojoelfe
      run: |
        ${{ steps.python.outputs.python-path }} -m hatch publish
        



